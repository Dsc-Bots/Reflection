"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Bot",{enumerable:true,get:()=>Bot});const _discordJs=require("discord.js");const _nodePath=require("node:path");const _utils=require("./utils");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}let Bot=class Bot extends _discordJs.Client{loadSlashCommands(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"modals");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this.modals.set(caller.customId,{path,caller});console.log(`[Handler] Se har cargado el modal ${caller.customId}`)}})()}loadUserContext(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"users");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this.userContext.set(caller.data.name,{path,caller});console.log(`[Handler] Se ha cargado el UserContext ${caller.data.name}`)}})()}loadMessageContext(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"messages");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this.userContext.set(caller.data.name,{path,caller});console.log(`[Handler] Se ha cargado el MessageContext ${caller.data.name}`)}})()}loadComponents(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"components");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this.components.set(caller.customId,{path,caller});console.log(`[Handler] Se ha cargado el componente ${caller.customId}`)}})()}loadModals(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"modals");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this.modals.set(caller.customId,{path,caller});console.log(`[Handler] Se har cargado el modal ${caller.customId}`)}})()}loadEvents(folder){var _this=this;return _asyncToGenerator(function*(){const dir=(0,_nodePath.join)(process.cwd(),folder!=null?folder:"modals");const files=yield _utils.Util.walk(dir,".js");for(const path of files){const caller=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));if(Array.isArray(_this.events))_this.events.push({path,caller});_this[caller.type](caller.name,_asyncToGenerator(function*(...args){return yield caller.execute(...args)}))}})()}reloadCommand(commandName,type){var _this=this;return _asyncToGenerator(function*(){let getter;switch(type){case _discordJs.ApplicationCommandType.ChatInput:getter=_this.chatInputCommands;break;case _discordJs.ApplicationCommandType.Message:getter=_this.messageContext;break;case _discordJs.ApplicationCommandType.User:getter=_this.userContext;break;default:return false}const command=getter.get(commandName);if(!command)return false;const{path}=command;delete require.cache[path];const recovery=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));getter.delete(command.caller.data.name);getter.set(recovery.data.name,{path,caller:_extends({},recovery)});return true})()}reloadEvent(eventName){var _this=this;return _asyncToGenerator(function*(){if(!Array.isArray(_this.events))return false;const event=_this.events.findIndex(ev=>ev.caller.name===eventName);if(!event)return false;const{caller:{name,execute},path}=_this.events[event];_this.removeListener(name,execute);delete require.cache[path];const recovery=yield Promise.resolve(path).then(p=>_interopRequireWildcard(require(p)));_this[recovery.type](recovery.name,_asyncToGenerator(function*(...args){return yield recovery.execute(...args)}));_this.events[event]={path,caller:recovery};return true})()}constructor(options){super(options);this.chatInputCommands=new Map;this.components=new Map;this.modals=new Map;this.events=[]}};
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{createChatCommand:()=>createChatCommand,createUserCommand:()=>createUserCommand,createMessageCommand:()=>createMessageCommand});const _discordJs=require("discord.js");const _utils=require("./utils");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function createChatCommand(command){_utils.Util.chatCommandValidator(command);return _extends({},command)}function createUserCommand({data,execute}){if(execute.length<1){throw new Error(`El comando [${data.name}] tiene menos de 1 argumento en su funcion execute`)}data.type=_discordJs.ApplicationCommandType.User;return{data,execute}}function createMessageCommand({data,execute}){if(execute.length<1){throw new Error(`El comando [${data.name}}] tiene menos de 1 argumento en su funcion execute`)}data.type=_discordJs.ApplicationCommandType.Message;return{data,execute}}
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{createComponent:()=>createComponent,createModal:()=>createModal});const _utils=require("./utils");function createComponent(data){_utils.Util.discordComponentValidator(data);return data}function createModal(data){_utils.Util.discordComponentValidator(data);return data}
"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"createEvent",{enumerable:true,get:()=>createEvent});const _utils=require("./utils");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function createEvent(data){var _data;_utils.Util.discordEventValidator(data);var _type;(_type=(_data=data).type)!=null?_type:_data.type="on";return _extends({},data)}
"use strict";Object.defineProperty(exports,"__esModule",{value:true});_exportStar(require("./Commands"),exports);_exportStar(require("./Events"),exports);_exportStar(require("./Components"),exports);_exportStar(require("./types"),exports);_exportStar(require("./utils"),exports);_exportStar(require("./Client"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}
"use strict";Object.defineProperty(exports,"__esModule",{value:true});
"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Util",{enumerable:true,get:()=>Util});const _promises=require("node:fs/promises");const _nodePath=require("node:path");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}let Util=class Util{static walk(path,filter){return _asyncToGenerator(function*(){const files=yield(0,_promises.readdir)(path,{withFileTypes:true});const result=[];for(const file of files){const filePath=(0,_nodePath.join)(path,file.name);if(file.isDirectory()){result.push(...yield Util.walk(filePath));continue}result.push(filePath)}if(filter==null?void 0:filter.length)return result.filter(f=>f.endsWith(filter));return result})()}static chatCommandValidator(obj){if(obj.execute.length<1){throw new Error(`El comando [${obj.data.name}] tiene menos de 1 argumento en su funcion execute`)}if(obj.onAutoComplete&&obj.onAutoComplete.length<1){throw new Error(`El comando [${obj.data.name}] tiene menos de 1 argumento en su funcion onAutoComplete`)}if(obj.onSub&&obj.onSub.length<1){throw new Error(`El comando [${obj.data.name}] tiene menos de 1 argumento en su funcion onSub`)}}static discordEventValidator(obj){if(obj.execute.length<1){throw new Error(`El evento [${obj.name}] tiene menos de 1 argumento en su funcion execute`)}}static discordComponentValidator(obj){if(obj.execute.length<1){throw new Error(`El componente [${obj.customId}] tiene menos de 1 argumento en su funcion execute`)}if(obj.customId.length<1){throw new Error(`El componente [${obj.customId} ???] no puede tener su customId vacia`)}}};
